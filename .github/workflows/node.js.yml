# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI
env:
  NODE_ENV: ${{ secrets.NODE_ENV }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_SCHEMA: ${{ secrets.DB_SCHEMA }}
  DB_DROP_SCHEMA: ${{ secrets.DB_DROP_SCHEMA }}
  SERVICE_ID: ${{ secrets.SERVICE_ID }}
  RANCHER_URL: ${{ secrets.RANCHER_URL }}
  RANCHER_ACCESS_KEY: ${{ secrets.RANCHER_ACCESS_KEY }}
  RANCHER_SECRET_KEY: ${{ secrets.RANCHER_SECRET_KEY }}
  DOCKER_IMAGE_NAME: api

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 11.x, 12.x, 13.x, 14.x, 15.x]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build

  tests:
    needs: [compile]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm run test:e2e

  Build:
    needs: [compile, tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag img

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$DOCKER_IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          VERSION=${{ steps.extract_branch.outputs.branch }}

          docker tag img $IMAGE_ID:$VERSION

          docker push $IMAGE_ID:$VERSION

          echo "::set-env name=DOCKER_PATH::$IMAGE_ID:$VERSION"

  Deploy:
    needs: [compile, tests, Build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: echo pat = $DOCKER_PATH
      - run: npm i upgrade-rancher
      - run: ./node_modules/.bin/upgrade-rancher --IMAGE $DOCKER_PATH --SERVICE_ID ${{ secrets.SERVICE_ID }}
